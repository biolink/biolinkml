name: Build

on:
  push:
    branches: [ master ]

jobs:
  pip-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv-to-requirements
          pipenv_to_requirements
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with unittest
        run: |
          python -m unittest discover -p 'test_*.py'

      - name: Check in requirements.txt and requirements-dev.txt
        run: |
          git add requirements*.txt
          if [[ ! -z $(git status -s requirements*.txt) ]]
          then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git commit -m 'Automatically generated requirements.txt and requiremetns-dev.txt' requirements*.txt
            git push
          fi

  docs:
    runs-on: ubuntu-latest
    needs: pip-test
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name:  Install Pipenv
      uses: dschep/install-pipenv-action@v1

    - name: Install dependencies using pipenv
      run: pipenv install

    - name: Remove old docs
      run: rm -fr docs/*

    - name: Create new docs
      run: pipenv run python -c "from biolinkml.generators.markdowngen import MarkdownGenerator;
            MarkdownGenerator('meta.yaml').serialize(directory='docs')"

    - name: Commit changes and push
      run: |
        git add docs
        if [[ ! -z $(git status -s docs) ]]
        then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'Automated update to docs with GitHub Actions' docs
          git push
        fi

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: build a binary wheel
      run: |
        rm -fr dist
        python setup.py bdist_wheel sdist
    - name: Publish distribution üì¶ to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution üì¶ to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        password: ${{ secrets.pypi_password }}
